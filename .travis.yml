sudo: required
dist: trusty
group: edge

language: cpp
cache:
  - ccache

env:
  global:
    - USE_CCACHE=1
    - CCACHE_SLOPPINESS=pch_defines,time_macros
    - CCACHE_COMPRESS=1
    - CCACHE_MAXSIZE=100M
    - ARCH_FLAGS_x86='-m32'        # #266: don't use SSE on 32-bit
    - ARCH_FLAGS_x86_64='-msse4.2' #       use SSE4.2 on 64-bit
    - GITHUB_REPO='Tencent/rapidjson'
    - secure: "HrsaCb+N66EG1HR+LWH1u51SjaJyRwJEDzqJGYMB7LJ/bfqb9mWKF1fLvZGk46W5t7TVaXRDD5KHFx9DPWvKn4gRUVkwTHEy262ah5ORh8M6n/6VVVajeV/AYt2C0sswdkDBDO4Xq+xy5gdw3G8s1A4Inbm73pUh+6vx+7ltBbk="

before_install:
    - sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test
    - sudo apt-get update -qq
    - sudo apt-get install -y cmake valgrind g++-8-multilib libc6-dbg:i386

matrix:
  include:
    # gcc
    - env: CONF=release ARCH=x86    CXX11=ON
      compiler: gcc
    - env: CONF=release ARCH=x86_64 CXX11=ON CXX=g++-8
      compiler: gcc
    - env: CONF=debug   ARCH=x86    CXX11=OFF
      compiler: gcc
    - env: CONF=debug   ARCH=x86_64 CXX11=OFF
      compiler: gcc
    # clang
    - env: CONF=debug   ARCH=x86    CXX11=ON CCACHE_CPP2=yes
      compiler: clang
    - env: CONF=debug   ARCH=x86_64 CXX11=ON CCACHE_CPP2=yes
      compiler: clang
    - env: CONF=debug   ARCH=x86    CXX11=OFF CCACHE_CPP2=yes
      compiler: clang
    - env: CONF=debug   ARCH=x86_64 CXX11=OFF CCACHE_CPP2=yes
      compiler: clang
    - env: CONF=release ARCH=x86    CXX11=ON CCACHE_CPP2=yes
      compiler: clang
    - env: CONF=release ARCH=x86_64 CXX11=ON CCACHE_CPP2=yes
      compiler: clang
    # coverage report
    - env: CONF=debug   ARCH=x86    CXX11=ON GCOV_FLAGS='--coverage'
      compiler: gcc
      cache:
        - ccache
        - pip
      after_success:
        - pip install --user cpp-coveralls
        - coveralls -r .. --gcov-options '\-lp' -e thirdparty -e example -e test -e build/CMakeFiles -e include/rapidjson/msinttypes -e include/rapidjson/internal/meta.h -e include/rapidjson/error/en.h
    - env: CONF=debug   ARCH=x86_64 GCOV_FLAGS='--coverage'
      compiler: gcc
      cache:
        - ccache
        - pip
      after_success:
        - pip install --user cpp-coveralls
        - coveralls -r .. --gcov-options '\-lp' -e thirdparty -e example -e test -e build/CMakeFiles -e include/rapidjson/msinttypes -e include/rapidjson/internal/meta.h -e include/rapidjson/error/en.h
    - script: # Documentation task
      - cd build
      - cmake .. -DRAPIDJSON_HAS_STDSTRING=ON -DCMAKE_VERBOSE_MAKEFILE=ON
      - make travis_doc
      cache: false
      addons:
        apt:
          packages:
            - doxygen

before_script:
    - ccache -s
      #   hack to avoid Valgrind bug (https://bugs.kde.org/show_bug.cgi?id=326469),
      #   exposed by merging PR#163 (using -march=native)
      #   TODO: Since this bug is already fixed. Remove this when valgrind can be upgraded.
    - sed -i "s/-march=native//" CMakeLists.txt
    - mkdir build

script:
  - if [ "$CXX" = "clang++" ]; then export CXXFLAGS="-stdlib=libc++ ${CXXFLAGS}"; fi
  - >
      eval "ARCH_FLAGS=\${ARCH_FLAGS_${ARCH}}" ;
      (cd build && cmake
      -DRAPIDJSON_HAS_STDSTRING=ON
      -DRAPIDJSON_BUILD_CXX11=$CXX11
      -DCMAKE_VERBOSE_MAKEFILE=ON
      -DCMAKE_BUILD_TYPE=$CONF
      -DCMAKE_CXX_FLAGS="$ARCH_FLAGS $GCOV_FLAGS"
      -DCMAKE_EXE_LINKER_FLAGS=$GCOV_FLAGS
      ..)
  - cd build
  - make tests -j 2
  - make examples -j 2
  - ctest -j 2 -V `[ "$CONF" = "release" ] || echo "-E perftest"`
